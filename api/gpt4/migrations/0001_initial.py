# Generated by Django 5.2 on 2025-06-23 04:48

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientID',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('clientId', models.CharField(blank=True, max_length=60, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Creditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, unique=True)),
                ('postal_address_country', models.CharField(max_length=2)),
                ('postal_address_street', models.CharField(max_length=70, unique=True)),
                ('postal_address_city', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='CreditorAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bic', models.CharField(max_length=11, unique=True)),
                ('financial_institution_id', models.CharField(max_length=35, unique=True)),
                ('other_information', models.CharField(max_length=70, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='MIRYA TRADING CO LTD', max_length=70, unique=True)),
                ('customer_id', models.CharField(default='27CDBFRDE17BEH', max_length=35, unique=True)),
                ('postal_address_country', models.CharField(default='DE', max_length=2)),
                ('postal_address_street', models.CharField(default='TAUNUSANLAGE 12', max_length=70, unique=True)),
                ('postal_address_city', models.CharField(default='60325 FRANKFURT', max_length=70, unique=True)),
                ('mobile_phone_number', models.CharField(blank=True, help_text='Formato internacional, e.g. +4915123456789', max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kid',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('kid', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LogTransferencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registro', models.CharField(help_text='Puede ser payment_id o session_id', max_length=64)),
                ('tipo_log', models.CharField(choices=[('AUTH', 'Autenticación'), ('TRANSFER', 'Transferencia'), ('XML', 'Generación XML'), ('AML', 'Generación AML'), ('ERROR', 'Error'), ('SCA', 'Autenticación fuerte'), ('OTP', 'Generación OTP')], max_length=20)),
                ('contenido', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Log de Transferencia',
                'verbose_name_plural': 'Logs de Transferencias',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentIdentification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_to_end_id', models.CharField(max_length=35)),
                ('instruction_id', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='ClaveGenerada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.CharField(max_length=255)),
                ('estado', models.CharField(choices=[('EXITO', 'Éxito'), ('ERROR', 'Error'), ('CANCELADO', 'Cancelado')], max_length=10)),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('kid', models.CharField(blank=True, max_length=100, null=True)),
                ('path_privada', models.CharField(blank=True, max_length=500, null=True)),
                ('path_publica', models.CharField(blank=True, max_length=500, null=True)),
                ('path_jwks', models.CharField(blank=True, max_length=500, null=True)),
                ('clave_privada', models.TextField(blank=True, null=True)),
                ('clave_publica', models.TextField(blank=True, null=True)),
                ('jwks', models.JSONField(blank=True, null=True)),
                ('archivo_privado', models.FileField(blank=True, null=True, upload_to='claves/')),
                ('archivo_publico', models.FileField(blank=True, null=True, upload_to='claves/')),
                ('archivo_jwks', models.FileField(blank=True, null=True, upload_to='claves/')),
                ('mensaje_error', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Clave generada',
                'verbose_name_plural': 'Claves generadas',
                'ordering': ['-fecha'],
                'indexes': [models.Index(fields=['usuario'], name='gpt4_claveg_usuario_3d0c46_idx'), models.Index(fields=['kid'], name='gpt4_claveg_kid_b6f50a_idx')],
            },
        ),
        migrations.CreateModel(
            name='CreditorAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', models.CharField(max_length=34, unique=True)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('creditor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditoraccount_set', to='gpt4.creditor')),
            ],
        ),
        migrations.CreateModel(
            name='DebtorAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', models.CharField(default='DE86500700100925993805', max_length=34, unique=True)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.debtor')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=36, unique=True)),
                ('instructed_amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(default='EUR', max_length=3)),
                ('purpose_code', models.CharField(default='GDSV', max_length=4)),
                ('requested_execution_date', models.DateField()),
                ('remittance_information_unstructured', models.CharField(blank=True, max_length=140, null=True)),
                ('status', models.CharField(choices=[('RJCT', 'Rechazada'), ('RCVD', 'Recibida'), ('ACCP', 'Aceptada'), ('ACTC', 'Aceptada técnicamente'), ('ACSP', 'En proceso'), ('ACSC', 'Ejecutada con éxito'), ('ACWC', 'Con advertencia'), ('ACWP', 'Pendiente de aprobación'), ('ACCC', 'Concluida'), ('CANC', 'Cancelada'), ('PDNG', 'Pendiente'), ('ERRO', 'Error'), ('CREA', 'Creada')], default='CREA', max_length=10)),
                ('auth_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='gpt4.clientid')),
                ('creditor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.creditor')),
                ('creditor_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.creditoraccount')),
                ('creditor_agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.creditoragent')),
                ('debtor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.debtor')),
                ('debtor_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.debtoraccount')),
                ('kid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfersKID', to='gpt4.kid')),
                ('payment_identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt4.paymentidentification')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
