# ===========================================
# CONFIGURACIÓN GENERAL DEL PROYECTO
# ===========================================

# Nombre del proyecto principal
PROJECT_NAME=api_bank_h2
PROJECT_NAME_SOCK=api

# Entorno de ejecución (local | production | heroku)
# ENVIRONMENT=local
# DJANGO_ENV=local
# Puerto local para desarrollo (livereload, debug)
PORT=8000

# Interfaz de red para diagnóstico/red (ej. wlan0 o eth0)
INTERFAZ=wlan0

# Ruta raíz del proyecto local
PROJECT_ROOT=/home/markmur88/api_bank_h2

# Entorno virtual Python
VENV_DIR=/home/markmur88/envAPP
VENV_PATH=/home/markmur88/envAPP

# Carpeta para backups locales
BACKUP_DIR=/home/markmur88/backup

# Logs generales
PROJECT_ROOT=/home/markmur88/api_bank_h2
LOG_DIR=/home/markmur88/scripts/schemas/logs
LOG_FILE_SCRIPT=$LOG_DIR/full_deploy.log
STARTUP_LOG=$LOG_DIR/startup.log
ERROR_LOG=$LOG_DIR/error.log
RUNNER_LOG=$LOG_DIR/runner.log
CRON_LOG=$LOG_DIR/cron.log
OPERATION_LOG=$LOG_DIR/operation.log
RED_LOG=$LOG_DIR/red.log

# Archivos auxiliares de red/cache
CACHE_DIR=$PROJECT_ROOT/tmp
IP_ANT=$CACHE_DIR/ip_antes.txt
IP_ACT=$CACHE_DIR/ip_actual.txt
MC_ANT=$CACHE_DIR/mac_antes.txt
MC_ACT=$CACHE_DIR/mac_actual.txt

# Scripts y servicios
SCRIPTS_DIR=$PROJECT_ROOT/scripts
SERVERS_DIR=$PROJECT_ROOT/servers

# Gunicorn config
GUNICORN_DIR=$SERVERS_DIR/gunicorn
SOCK_FILE=$GUNICORN_DIR/$PROJECT_NAME_SOCK.sock
GUNICORN_LOG=$GUNICORN_DIR/gunicorn.log
PIDFILE=$LOG_DIR/gunicorn.pid

# Supervisor config (opcional)
SUPERVISOR_DIR=$SERVERS_DIR/supervisor/conf.d
SUPERVISOR_PROGRAM=${PROJECT_NAME}_gunicorn
SUPERVISOR_CONF=$SUPERVISOR_DIR/$SUPERVISOR_PROGRAM.conf
OLD_SUPERVISOR_CONF=$SUPERVISOR_DIR/${PROJECT_NAME}.conf

# Nginx local
NGINX_SITES_AVAILABLE=$SERVERS_DIR/nginx/sites-available
NGINX_SITES_ENABLED=/home/markmur88/servers/nginx/sites-enabled
NGINX_CONF=$NGINX_SITES_AVAILABLE/$PROJECT_NAME

# SSL locales (si usás claves autogeneradas o propias)
CERT_DIR=$SERVERS_DIR/ssl/$PROJECT_NAME
SSL_CERT=$CERT_DIR/ghost.crt
SSL_KEY=$CERT_DIR/ghost.key

# Hosts válidos permitidos por Django
ALLOWED_HOSTS=api.coretransapi.com,apibank2-54644cdf263f.herokuapp.com,127.0.0.1,0.0.0.0,sixjt4orn6atjm423vtmrno25a4d47g222gtd6bnazvx3jiyxnbmfbyd.onion

# Tor config (solo si usás navegador con proxy)
TOR_CONFIG=etc/tor/torrc

# Django secret key para uso local (en producción usar variables seguras)
SECRET_KEY=L3hesOa21ZGRsk0TsVvKMI6kWuv8d-ZAGIfP87i4Hv0

# ===========================================
# CONFIGURACIÓN VPS - coretransapi.com
# ===========================================

# markmur88 remoto del VPS
VPS_USER=markmur88

# IP pública del VPS
VPS_IP=80.78.30.242

# Ruta remota de despliegue en el VPS
VPS_API_DIR=/home/markmur88/api_bank_heroku

# Ruta a la clave privada SSH para acceder al VPS
SSH_KEY=/home/markmur88/.ssh/vps_njalla_nueva

# Frase segura usada para cifrar backups con OpenSSL
PASSPHRASE="##_//Ptf8454Jd55\\_##"





# Dirección IP del VPS (para DNS interno)
DNS_BANCO=80.78.30.242

# Dominio FQDN del servidor (resolución DNS)
DOMINIO_BANCO=504e1ef2.host.njalla.net

# Prefijo de red interna del banco (IP real del entorno productivo)
RED_SEGURA_PREFIX=80.78.30

# Puerto donde corre gunicorn en el VPS simulado
MOCK_PORT=9181

TOKEN_URL="http://80.78.30.242:9181/oidc/token"
AUTHORIZE_URL="http://80.78.30.242:9181/oidc/authorize"
OTP_URL="http://80.78.30.242:9181/otp/single"
AUTH_URL="http://80.78.30.242:9181/auth/challenges"
API_URL="http://80.78.30.242:9181/payments"

REDIRECT_URI="https://api.coretransapi.com/oauth2/callback/"
ORIGIN="https://api.coretransapi.com"

BASE_URL="http://80.78.30.242:9181"
TOKEN_PATH="/oidc/token"
AUTH_PATH="/auth/challenges"
SEND_PATH="/payments"
STATUS_PATH="/payments/status"

TIMEOUT_REQUEST=1800
ALLOW_FAKE_BANK=True 

BANK_USER="markmur88"
BANK_PASS="Ptf8454Jd55"

SCOPE="sepa_credit_transfers"
TIMEOUT=300

SSH_HOST=80.70.30.242
SSH_PORT=22
SSH_USER=markmur88
SSH_KEY_PATH=/home/markmur88/.ssh/id_ed25519_493069k1
SSH_PASSWORD=Ptf8454Jd55